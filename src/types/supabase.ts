/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/images": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.images.id"];
          file_id?: parameters["rowFilter.images.file_id"];
          url?: parameters["rowFilter.images.url"];
          created_at?: parameters["rowFilter.images.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["images"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** images */
          images?: definitions["images"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.images.id"];
          file_id?: parameters["rowFilter.images.file_id"];
          url?: parameters["rowFilter.images.url"];
          created_at?: parameters["rowFilter.images.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.images.id"];
          file_id?: parameters["rowFilter.images.file_id"];
          url?: parameters["rowFilter.images.url"];
          created_at?: parameters["rowFilter.images.created_at"];
        };
        body: {
          /** images */
          images?: definitions["images"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/files": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.files.id"];
          name?: parameters["rowFilter.files.name"];
          created_at?: parameters["rowFilter.files.created_at"];
          is_public?: parameters["rowFilter.files.is_public"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["files"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** files */
          files?: definitions["files"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferPost"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.files.id"];
          name?: parameters["rowFilter.files.name"];
          created_at?: parameters["rowFilter.files.created_at"];
          is_public?: parameters["rowFilter.files.is_public"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.files.id"];
          name?: parameters["rowFilter.files.name"];
          created_at?: parameters["rowFilter.files.created_at"];
          is_public?: parameters["rowFilter.files.is_public"];
        };
        body: {
          /** files */
          files?: definitions["files"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  images: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `files.id`.<fk table='files' column='id'/>
     */
    file_id: number;
    /** Format: character varying */
    url: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
  };
  files: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: character varying */
    name: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: boolean
     * @default false
     */
    is_public: boolean;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferPost:
    | "return=representation"
    | "return=minimal"
    | "return=none"
    | "resolution=ignore-duplicates"
    | "resolution=merge-duplicates";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description images */
  "body.images": definitions["images"];
  /** Format: bigint */
  "rowFilter.images.id": string;
  /** Format: bigint */
  "rowFilter.images.file_id": string;
  /** Format: character varying */
  "rowFilter.images.url": string;
  /** Format: timestamp with time zone */
  "rowFilter.images.created_at": string;
  /** @description files */
  "body.files": definitions["files"];
  /** Format: bigint */
  "rowFilter.files.id": string;
  /** Format: character varying */
  "rowFilter.files.name": string;
  /** Format: timestamp with time zone */
  "rowFilter.files.created_at": string;
  /** Format: boolean */
  "rowFilter.files.is_public": string;
}

export interface operations {}

export interface external {}
